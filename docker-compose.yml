version: '3.4'

services:
  php:
    image: ${CONTAINER_REGISTRY_BASE}/php
    build:
      context: ./api
      target: api_platform_php
      cache_from:
        - ${CONTAINER_REGISTRY_BASE}/php
        - ${CONTAINER_REGISTRY_BASE}/nginx
        - ${CONTAINER_REGISTRY_BASE}/varnish
    depends_on:
      - db
    # Comment out these volumes in production
    volumes:
      - ./api:/srv/api:rw,cached
      # If you develop on Linux, uncomment the following line to use a bind-mounted host directory instead
      # - ./api/var:/srv/api/var:rw

  api:
    image: ${CONTAINER_REGISTRY_BASE}/nginx
    build:
      context: ./api
      target: api_platform_nginx
      cache_from:
        - ${CONTAINER_REGISTRY_BASE}/php
        - ${CONTAINER_REGISTRY_BASE}/nginx
        - ${CONTAINER_REGISTRY_BASE}/varnish
    depends_on:
      - php
    # Comment out this volume in production
    volumes:
      - ./api/public:/srv/api/public:ro

  cache-proxy:
    image: ${CONTAINER_REGISTRY_BASE}/varnish
    build:
      context: ./api
      target: api_platform_varnish
      cache_from:
        - ${CONTAINER_REGISTRY_BASE}/php
        - ${CONTAINER_REGISTRY_BASE}/nginx
        - ${CONTAINER_REGISTRY_BASE}/varnish
    depends_on:
      - api
    volumes:
      - ./api/docker/varnish/conf:/usr/local/etc/varnish:ro
    tmpfs:
      - /usr/local/var/varnish:exec

  db:
    # In production, you may want to use a managed database service
    image: postgres:10-alpine
    environment:
      - POSTGRES_DB=api
      - POSTGRES_USER=apiplatform
      # You should definitely change the password in production
      - POSTGRES_PASSWORD=ChangeMe
    volumes:
      - db-data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
    ports:
      - "5432:5432"

  ascustomer:
    # Use a static website hosting service in production
    build:
      context: ./ascustomer
    volumes:
      - ./asCustomer:/usr/src/asCustomer:rw,cached
      - /usr/src/asCustomer/node_modules

  mercure:
    image: dunglas/mercure:latest
    env_file:
      - ./mercure/.env
    ports:
      - "8081:8081"

  h2-proxy:
    # Don't use this proxy in prod
    build:
      context: h2-proxy
    depends_on:
      - ascustomer
      - api
      - cache-proxy
    ports:
      - "80:80"
      - "443:443"
      - "8443:8443"

volumes:
  db-data: {}
